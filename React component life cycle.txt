REACT COMPONENT LIFE CYCLE


import React, { Component } from 'react'

class App extends Component {
  constructor(props){
    super(props);
    this.state={hello:"Welcome"};
  this.changeState=this.changeState.bind(this)
  }
  render() {
 
    return (
      <div>
        <h1>Reactjs Component's lifecycle</h1>
        <h3>Hello {this.state.hello}</h3>
        <button onClick={this.changeState}>Click Here!</button>
        
      </div>
    );
  }
  componentWillMount(){
    console.log('component will mount!')

  }
  componentDidMount(){
    console.log('component Did Mount!')
  }
  changeState(){
    this.setState({hello:"All!!"});
  }
  componentWillReceiveProps(newProps){
    console.log('component Will Receive Props')
  }
  shouldComponentUpdate(newProps,newState){
    return true;

  }
  componentWillUpdate(nextProps,nextState){
    console.log("component will update");
  }
  componentDidUpdate(prevProps,prevState){
    console.log('component Did update')
  }
componentWillUnmount(){
    console.log('component Will Unmount')
}
}

export default App;